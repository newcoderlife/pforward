name: Build CoreDNS With PForward

on:
  push:
    tags:
      - "*"

jobs:
  Build-CoreDNS-With-PForward:
    runs-on: ubuntu-latest
    steps:
      - name: Clone PForward
        uses: actions/checkout@v4
      
      - name: Set Go Version
        run: |
          make clone-dependency
          echo "GO_VERSION=$(make go-version)" >> $GITHUB_ENV

      - name: Prepare Golang
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-dependency-path: |
            coredns/go.sum
            pforward/go.sum

      - name: Prepare QEMU
        uses: docker/setup-qemu-action@v3

      - name: Prepare Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build CoreDNS
        run: |
          make prepare-docker

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          push: true
          tags: ghcr.io/newcoderlife/coredns:latest
          no-cache: true

      - name: Test Docker Image
        if: ${{ success() }}
        run: |
          make test
          make save-image

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            *.deb
            *.tar

      - name: Debug Environment
        if: ${{ failure() }}
        run: |
          sudo apt-get update && sudo apt-get install wireguard openssh-server -y
          sudo tee /etc/wireguard/wg0.conf > /dev/null <<EOL
          [Interface]
          PrivateKey = ${{ secrets.DEBUG_PRIVKEY }}
          Address = 192.168.103.2/24
          [Peer]
          PublicKey = ${{ secrets.DEBUG_PUBKEY }}
          AllowedIPs = 192.168.103.0/24
          Endpoint = ${{ secrets.DEBUG_REMOTE }}
          PresharedKey = ${{ secrets.DEBUG_PSKEY }}
          PersistentKeepalive = 10
          EOL
          sudo systemctl start wg-quick@wg0
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.DEBUG_SSHPUB }}" >> /home/runner/.ssh/authorized_keys
          cat /home/runner/.ssh/authorized_keys
          
          if sudo grep -q "^#PubkeyAuthentication" /etc/ssh/sshd_config; then
            sudo sed -i 's/^#PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config
          elif sudo grep -q "^PubkeyAuthentication" /etc/ssh/sshd_config; then
            sudo sed -i 's/^PubkeyAuthentication.*/PubkeyAuthentication yes/' /etc/ssh/sshd_config
          else
            sudo echo "PubkeyAuthentication yes" >> /etc/ssh/sshd_config
          fi
          sudo systemctl restart sshd
          sudo service ssh restart

          sleep 300